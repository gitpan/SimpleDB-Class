digraph {
graph [overlap=false]
subgraph cluster_Moose_Meta_Role_Application_ToRole {
	label="Moose::Meta::Role::Application::ToRole";
	"Moose::Meta::Role::Application::ToRole::meta";
}
subgraph cluster_Moose_Meta_Role_Composite {
	label="Moose::Meta::Role::Composite";
	"Moose::Meta::Role::Composite::meta";
}
subgraph cluster_MooseX_ClassAttribute_Role_Meta_Class {
	label="MooseX::ClassAttribute::Role::Meta::Class";
	"MooseX::ClassAttribute::Role::Meta::Class::add_class_attribute";
}
subgraph cluster_List_MoreUtils {
	label="List::MoreUtils";
	"List::MoreUtils::all";
	"List::MoreUtils::any";
}
subgraph cluster_Moose_Meta_Role_Application_ToInstance {
	label="Moose::Meta::Role::Application::ToInstance";
	"Moose::Meta::Role::Application::ToInstance::meta";
}
subgraph cluster_SimpleDB_Class_Cache {
	label="SimpleDB::Class::Cache";
	"SimpleDB::Class::Cache::new";
}
subgraph cluster_MooseX_Types_TypeDecorator {
	label="MooseX::Types::TypeDecorator";
	"MooseX::Types::TypeDecorator::__ANON__[MooseX/Types/TypeDecorator.pm:20]";
	"MooseX::Types::TypeDecorator::new";
	"MooseX::Types::TypeDecorator::__type_constraint";
	"MooseX::Types::TypeDecorator::isa";
}
subgraph cluster_vars {
	label="vars";
	"vars::BEGIN@3";
	"vars::BEGIN@8";
	"vars::import";
	"vars::BEGIN@7";
}
subgraph cluster_Moose_Exporter {
	label="Moose::Exporter";
	"Moose::Exporter::_curry_wrapper";
}
subgraph cluster_Test_Deep_RefType {
	label="Test::Deep::RefType";
	"Test::Deep::RefType::descend";
}
subgraph cluster_Moose_Meta_TypeConstraint_Enum {
	label="Moose::Meta::TypeConstraint::Enum";
	"Moose::Meta::TypeConstraint::Enum::meta";
}
subgraph cluster_Class_MOP_Mixin_HasMethods {
	label="Class::MOP::Mixin::HasMethods";
	"Class::MOP::Mixin::HasMethods::add_method";
	"Class::MOP::Mixin::HasMethods::get_method";
}
subgraph cluster_Moose_Meta_Role {
	label="Moose::Meta::Role";
	"Moose::Meta::Role::add_required_methods";
	"Moose::Meta::Role::meta";
	"Moose::Meta::Role::add_role";
	"Moose::Meta::Role::apply";
	"Moose::Meta::Role::add_attribute";
}
subgraph cluster_Moose_Util_TypeConstraints {
	label="Moose::Util::TypeConstraints";
	"Moose::Util::TypeConstraints::subtype";
	"Moose::Util::TypeConstraints::_create_type_constraint";
	"Moose::Util::TypeConstraints::find_type_constraint";
}
subgraph cluster_Class_MOP_Method_Inlined {
	label="Class::MOP::Method::Inlined";
	"Class::MOP::Method::Inlined::can_be_inlined";
}
subgraph cluster_Moose {
	label="Moose";
	"Moose::init_meta";
}
subgraph cluster_Sub_Install {
	label="Sub::Install";
	"Sub::Install::_CODELIKE";
}
subgraph cluster_Moose_Meta_TypeConstraint_Parameterized {
	label="Moose::Meta::TypeConstraint::Parameterized";
	"Moose::Meta::TypeConstraint::Parameterized::compile_type_constraint";
	"Moose::Meta::TypeConstraint::Parameterized::meta";
}
subgraph cluster_Moose_Util_MetaRole {
	label="Moose::Util::MetaRole";
	"Moose::Util::MetaRole::_fixup_old_style_args";
	"Moose::Util::MetaRole::apply_metaroles";
}
subgraph cluster_Moose_Meta_Role_Application_RoleSummation {
	label="Moose::Meta::Role::Application::RoleSummation";
	"Moose::Meta::Role::Application::RoleSummation::meta";
}
subgraph cluster_Moose_Meta_Method_Constructor {
	label="Moose::Meta::Method::Constructor";
	"Moose::Meta::Method::Constructor::new";
}
subgraph cluster_Moose_Meta_TypeConstraint_Registry {
	label="Moose::Meta::TypeConstraint::Registry";
	"Moose::Meta::TypeConstraint::Registry::meta";
	"Moose::Meta::TypeConstraint::Registry::add_type_constraint";
}
subgraph cluster_Moose_Meta_Role_Attribute {
	label="Moose::Meta::Role::Attribute";
	"Moose::Meta::Role::Attribute::attach_to_role";
}
subgraph cluster_Test_Deep_Ref {
	label="Test::Deep::Ref";
	"Test::Deep::Ref::test_class";
}
subgraph cluster_Scalar_Util {
	label="Scalar::Util";
	"Scalar::Util::set_prototype";
	"Scalar::Util::BEGIN@9";
	"Scalar::Util::refaddr";
	"Scalar::Util::looks_like_number";
	"Scalar::Util::reftype";
	"Scalar::Util::blessed";
	"Scalar::Util::weaken";
	"Scalar::Util::BEGIN@10";
}
subgraph cluster_Moose_Meta_TypeConstraint_Class {
	label="Moose::Meta::TypeConstraint::Class";
	"Moose::Meta::TypeConstraint::Class::meta";
	"Moose::Meta::TypeConstraint::Class::__ANON__[Moose/Meta/TypeConstraint/Class.pm:38]";
}
subgraph cluster_Class_MOP_Method_Wrapped {
	label="Class::MOP::Method::Wrapped";
	"Class::MOP::Method::Wrapped::wrap";
}
subgraph cluster_Moose_Meta_Class {
	label="Moose::Meta::Class";
	"Moose::Meta::Class::add_role";
	"Moose::Meta::Class::reinitialize";
	"Moose::Meta::Class::add_attribute";
	"Moose::Meta::Class::add_role_application";
}
subgraph cluster_Test_Deep_Blessed {
	label="Test::Deep::Blessed";
	"Test::Deep::Blessed::descend";
}
subgraph cluster_Moose_Meta_Method_Destructor {
	label="Moose::Meta::Method::Destructor";
	"Moose::Meta::Method::Destructor::new";
	"Moose::Meta::Method::Destructor::is_needed";
}
subgraph cluster_SimpleDB_Class {
	label="SimpleDB::Class";
	"SimpleDB::Class::new";
}
subgraph cluster_SimpleDB_Client {
	label="SimpleDB::Client";
	"SimpleDB::Client::new";
}
subgraph cluster_SimpleDB_Class_ResultSet {
	label="SimpleDB::Class::ResultSet";
	"SimpleDB::Class::ResultSet::new";
}
subgraph cluster_Class_MOP_Mixin {
	label="Class::MOP::Mixin";
	"Class::MOP::Mixin::meta";
}
subgraph cluster_Class_MOP_Method_Accessor {
	label="Class::MOP::Method::Accessor";
	"Class::MOP::Method::Accessor::new";
}
subgraph cluster_Moose_Meta_TypeConstraint_Parameterizable {
	label="Moose::Meta::TypeConstraint::Parameterizable";
	"Moose::Meta::TypeConstraint::Parameterizable::meta";
}
subgraph cluster_Moose_Meta_TypeConstraint_DuckType {
	label="Moose::Meta::TypeConstraint::DuckType";
	"Moose::Meta::TypeConstraint::DuckType::meta";
}
subgraph cluster___TYPE__ {
	label="__TYPE__";
	"__TYPE__::ArrayRef";
}
subgraph cluster_SimpleDB_Class_Domain {
	label="SimpleDB::Class::Domain";
	"SimpleDB::Class::Domain::new";
}
subgraph cluster_Class_MOP_Object {
	label="Class::MOP::Object";
	"Class::MOP::Object::meta";
}
subgraph cluster_Test_Deep {
	label="Test::Deep";
	"Test::Deep::class_base";
	"Test::Deep::descend";
	"Test::Deep::wrap";
}
subgraph cluster_Devel_StackTrace {
	label="Devel::StackTrace";
	"Devel::StackTrace::_ref_to_string";
}
subgraph cluster_Moose_Util {
	label="Moose::Util";
	"Moose::Util::_apply_all_roles";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_Class_MOP_Instance {
	label="Class::MOP::Instance";
	"Class::MOP::Instance::BUILDARGS";
	"Class::MOP::Instance::weaken_slot_value";
	"Class::MOP::Instance::new";
}
subgraph cluster_Class_MOP_Class {
	label="Class::MOP::Class";
	"Class::MOP::Class::clone_object";
	"Class::MOP::Class::_construct_instance";
	"Class::MOP::Class::_clone_instance";
}
subgraph cluster_Class_MOP {
	label="Class::MOP";
	"Class::MOP::class_of";
	"Class::MOP::weaken_metaclass";
}
subgraph cluster_DateTime_Helpers {
	label="DateTime::Helpers";
	"DateTime::Helpers::can";
}
subgraph cluster_Class_MOP_Method_Constructor {
	label="Class::MOP::Method::Constructor";
	"Class::MOP::Method::Constructor::new";
	"Class::MOP::Method::Constructor::_generate_slot_initializer";
}
subgraph cluster_Moose_Meta_TypeConstraint_Role {
	label="Moose::Meta::TypeConstraint::Role";
	"Moose::Meta::TypeConstraint::Role::meta";
}
subgraph cluster_Moose_Meta_TypeCoercion_Union {
	label="Moose::Meta::TypeCoercion::Union";
	"Moose::Meta::TypeCoercion::Union::meta";
	"Moose::Meta::TypeCoercion::Union::compile_type_coercion";
}
subgraph cluster_Class_MOP_Attribute {
	label="Class::MOP::Attribute";
	"Class::MOP::Attribute::attach_to_class";
}
subgraph cluster_Moose_Object {
	label="Moose::Object";
	"Moose::Object::new";
}
subgraph cluster_SimpleDB_Class_SQL {
	label="SimpleDB::Class::SQL";
	"SimpleDB::Class::SQL::new";
}
subgraph cluster_overload {
	label="overload";
	"overload::AddrRef";
	"overload::Method";
}
subgraph cluster_MooseX_AttributeHelpers_Trait_Base {
	label="MooseX::AttributeHelpers::Trait::Base";
	"MooseX::AttributeHelpers::Trait::Base::process_options_for_provides";
}
subgraph cluster_main {
	label="main";
	"main::BEGIN@2";
}
subgraph cluster_Class_MOP_Package {
	label="Class::MOP::Package";
	"Class::MOP::Package::reinitialize";
	"Class::MOP::Package::has_package_symbol";
}
subgraph cluster_Moose_Meta_Role_Method_Required {
	label="Moose::Meta::Role::Method::Required";
	"Moose::Meta::Role::Method::Required::meta";
}
subgraph cluster_Moose_Meta_Attribute {
	label="Moose::Meta::Attribute";
	"Moose::Meta::Attribute::_weaken_value";
	"Moose::Meta::Attribute::_process_options";
}
subgraph cluster_Class_MOP_Mixin_HasAttributes {
	label="Class::MOP::Mixin::HasAttributes";
	"Class::MOP::Mixin::HasAttributes::add_attribute";
}
subgraph cluster_Class_MOP_Method {
	label="Class::MOP::Method";
	"Class::MOP::Method::attach_to_class";
	"Class::MOP::Method::wrap";
}
subgraph cluster_Test_Deep_Cache_Simple {
	label="Test::Deep::Cache::Simple";
	"Test::Deep::Cache::Simple::BEGIN@7";
	"Test::Deep::Cache::Simple::add";
	"Test::Deep::Cache::Simple::fn_get_key";
}
subgraph cluster_Moose_Meta_TypeConstraint {
	label="Moose::Meta::TypeConstraint";
	"Moose::Meta::TypeConstraint::meta";
	"Moose::Meta::TypeConstraint::equals";
}
subgraph cluster_Moose_Meta_TypeConstraint_Union {
	label="Moose::Meta::TypeConstraint::Union";
	"Moose::Meta::TypeConstraint::Union::meta";
}
subgraph cluster_Exception_Class {
	label="Exception::Class";
	"Exception::Class::caught";
}
subgraph cluster_Moose_Meta_TypeCoercion {
	label="Moose::Meta::TypeCoercion";
	"Moose::Meta::TypeCoercion::meta";
}
subgraph cluster_Moose_Meta_Role_Application {
	label="Moose::Meta::Role::Application";
	"Moose::Meta::Role::Application::meta";
}
subgraph cluster_Moose_Meta_Role_Application_ToClass {
	label="Moose::Meta::Role::Application::ToClass";
	"Moose::Meta::Role::Application::ToClass::meta";
	"Moose::Meta::Role::Application::ToClass::apply";
}
"Test::Deep::descend" -> "Scalar::Util::refaddr";
"main::BEGIN@2" -> "Scalar::Util::refaddr";
"overload::AddrRef" -> "Scalar::Util::refaddr";
"Test::Deep::wrap" -> "Scalar::Util::refaddr";
"Moose::Meta::TypeConstraint::equals" -> "Scalar::Util::refaddr";
"Class::MOP::Method::Inlined::can_be_inlined" -> "Scalar::Util::refaddr";
"Test::Deep::Cache::Simple::fn_get_key" -> "Scalar::Util::refaddr";
"Scalar::Util::BEGIN@10" -> "vars::BEGIN@8";
"Moose::Meta::Attribute::_weaken_value" -> "Scalar::Util::blessed";
"Moose::Meta::Attribute::_process_options" -> "Scalar::Util::blessed";
"Class::MOP::class_of" -> "Scalar::Util::blessed";
"Test::Deep::class_base" -> "Scalar::Util::blessed";
"SimpleDB::Class::new" -> "Scalar::Util::blessed";
"overload::AddrRef" -> "Scalar::Util::blessed";
"Moose::Meta::Role::add_required_methods" -> "Scalar::Util::blessed";
"Moose::Meta::Method::Destructor::is_needed" -> "Scalar::Util::blessed";
"MooseX::ClassAttribute::Role::Meta::Class::add_class_attribute" -> "Scalar::Util::blessed";
"Moose::Util::TypeConstraints::subtype" -> "Scalar::Util::blessed";
"Moose::Meta::TypeCoercion::Union::meta" -> "Scalar::Util::blessed";
"Class::MOP::Method::wrap" -> "Scalar::Util::blessed";
"SimpleDB::Class::Domain::new" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Registry::add_type_constraint" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::ToClass::meta" -> "Scalar::Util::blessed";
"Moose::Util::MetaRole::apply_metaroles" -> "Scalar::Util::blessed";
"overload::Method" -> "Scalar::Util::blessed";
"Moose::Util::TypeConstraints::find_type_constraint" -> "Scalar::Util::blessed";
"Moose::Meta::TypeCoercion::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Class::reinitialize" -> "Scalar::Util::blessed";
"Moose::Object::new" -> "Scalar::Util::blessed";
"Devel::StackTrace::_ref_to_string" -> "Scalar::Util::blessed";
"Class::MOP::Method::Wrapped::wrap" -> "Scalar::Util::blessed";
"Class::MOP::Mixin::meta" -> "Scalar::Util::blessed";
"Moose::Util::_apply_all_roles" -> "Scalar::Util::blessed";
"Moose::Util::TypeConstraints::_create_type_constraint" -> "Scalar::Util::blessed";
"Moose::Meta::Role::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Class::add_role_application" -> "Scalar::Util::blessed";
"MooseX::Types::TypeDecorator::isa" -> "Scalar::Util::blessed";
"Class::MOP::Class::_clone_instance" -> "Scalar::Util::blessed";
"Class::MOP::Mixin::HasMethods::get_method" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Parameterizable::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Parameterized::compile_type_constraint" -> "Scalar::Util::blessed";
"Class::MOP::Mixin::HasMethods::add_method" -> "Scalar::Util::blessed";
"SimpleDB::Class::Cache::new" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Attribute::attach_to_role" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Method::Required::meta" -> "Scalar::Util::blessed";
"SimpleDB::Class::SQL::new" -> "Scalar::Util::blessed";
"Class::MOP::Attribute::attach_to_class" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Enum::meta" -> "Scalar::Util::blessed";
"Class::MOP::Class::clone_object" -> "Scalar::Util::blessed";
"Moose::init_meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Union::meta" -> "Scalar::Util::blessed";
"MooseX::Types::TypeDecorator::__type_constraint" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::RoleSummation::meta" -> "Scalar::Util::blessed";
"Class::MOP::Package::reinitialize" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Composite::meta" -> "Scalar::Util::blessed";
"Class::MOP::Instance::BUILDARGS" -> "Scalar::Util::blessed";
"Moose::Util::MetaRole::_fixup_old_style_args" -> "Scalar::Util::blessed";
"Moose::Meta::Class::add_attribute" -> "Scalar::Util::blessed";
"Moose::Meta::Role::add_role" -> "Scalar::Util::blessed";
"Moose::Meta::Role::add_attribute" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Role::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Parameterized::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Class::__ANON__[Moose/Meta/TypeConstraint/Class.pm:38]" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Class::meta" -> "Scalar::Util::blessed";
"MooseX::Types::TypeDecorator::__ANON__[MooseX/Types/TypeDecorator.pm:20]" -> "Scalar::Util::blessed";
"MooseX::Types::TypeDecorator::new" -> "Scalar::Util::blessed";
"Moose::Meta::Class::add_role" -> "Scalar::Util::blessed";
"MooseX::AttributeHelpers::Trait::Base::process_options_for_provides" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::meta" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::Registry::meta" -> "Scalar::Util::blessed";
"Test::Deep::Blessed::descend" -> "Scalar::Util::blessed";
"Moose::Meta::TypeCoercion::Union::compile_type_coercion" -> "Scalar::Util::blessed";
"Class::MOP::Object::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::ToRole::meta" -> "Scalar::Util::blessed";
"SimpleDB::Client::new" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::meta" -> "Scalar::Util::blessed";
"SimpleDB::Class::ResultSet::new" -> "Scalar::Util::blessed";
"DateTime::Helpers::can" -> "Scalar::Util::blessed";
"Test::Deep::Ref::test_class" -> "Scalar::Util::blessed";
"Moose::Meta::Role::apply" -> "Scalar::Util::blessed";
"Moose::Meta::TypeConstraint::DuckType::meta" -> "Scalar::Util::blessed";
"Moose::Meta::Role::Application::ToInstance::meta" -> "Scalar::Util::blessed";
"Exception::Class::caught" -> "Scalar::Util::blessed";
"Class::MOP::Mixin::HasAttributes::add_attribute" -> "Scalar::Util::blessed";
"Class::MOP::Method::Constructor::new" -> "Scalar::Util::blessed";
"Class::MOP::Method::Accessor::new" -> "Scalar::Util::blessed";
"Test::Deep::Cache::Simple::BEGIN@7" -> "Scalar::Util::BEGIN@9";
"Scalar::Util::BEGIN@10" -> "vars::BEGIN@3";
"Class::MOP::Attribute::attach_to_class" -> "Scalar::Util::weaken";
"Class::MOP::Instance::weaken_slot_value" -> "Scalar::Util::weaken";
"Moose::Meta::Role::Application::ToClass::apply" -> "Scalar::Util::weaken";
"Class::MOP::Method::wrap" -> "Scalar::Util::weaken";
"Class::MOP::Method::attach_to_class" -> "Scalar::Util::weaken";
"Test::Deep::Cache::Simple::add" -> "Scalar::Util::weaken";
"Class::MOP::weaken_metaclass" -> "Scalar::Util::weaken";
"Moose::Meta::Method::Constructor::new" -> "Scalar::Util::weaken";
"Class::MOP::Instance::new" -> "Scalar::Util::weaken";
"Moose::Meta::Method::Destructor::new" -> "Scalar::Util::weaken";
"Class::MOP::Method::Constructor::new" -> "Scalar::Util::weaken";
"Moose::Meta::Role::Attribute::attach_to_role" -> "Scalar::Util::weaken";
"Class::MOP::Method::Accessor::new" -> "Scalar::Util::weaken";
"Class::MOP::Method::Constructor::_generate_slot_initializer" -> "Scalar::Util::looks_like_number";
"List::MoreUtils::all" -> "Scalar::Util::reftype";
"Moose::Util::TypeConstraints::subtype" -> "Scalar::Util::reftype";
"__TYPE__::ArrayRef" -> "Scalar::Util::reftype";
"Class::MOP::Method::wrap" -> "Scalar::Util::reftype";
"Test::Deep::class_base" -> "Scalar::Util::reftype";
"overload::AddrRef" -> "Scalar::Util::reftype";
"Sub::Install::_CODELIKE" -> "Scalar::Util::reftype";
"List::MoreUtils::any" -> "Scalar::Util::reftype";
"Class::MOP::Class::_construct_instance" -> "Scalar::Util::reftype";
"Class::MOP::Package::has_package_symbol" -> "Scalar::Util::reftype";
"Test::Deep::RefType::descend" -> "Scalar::Util::reftype";
"Test::Deep::Cache::Simple::BEGIN@7" -> "Scalar::Util::BEGIN@10";
"Moose::Exporter::_curry_wrapper" -> "Scalar::Util::set_prototype";
"Scalar::Util::BEGIN@10" -> "vars::import";
"Scalar::Util::BEGIN@9" -> "strict::import";
"Scalar::Util::BEGIN@10" -> "vars::BEGIN@7";
}
