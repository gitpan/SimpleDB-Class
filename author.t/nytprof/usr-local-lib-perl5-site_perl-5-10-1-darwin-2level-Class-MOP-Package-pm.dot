digraph {
graph [overlap=false]
subgraph cluster_Moose_Meta_Role_Application_ToRole {
	label="Moose::Meta::Role::Application::ToRole";
	"Moose::Meta::Role::Application::ToRole::check_role_exclusions";
	"Moose::Meta::Role::Application::ToRole::apply_methods";
}
subgraph cluster_MooseX_ClassAttribute_Role_Meta_Class {
	label="MooseX::ClassAttribute::Role::Meta::Class";
	"MooseX::ClassAttribute::Role::Meta::Class::_class_attribute_var_name";
}
subgraph cluster_Class_MOP_Module {
	label="Class::MOP::Module";
	"Class::MOP::Module::_instantiate_module";
}
subgraph cluster_warnings {
	label="warnings";
	"warnings::unimport";
	"warnings::import";
}
subgraph cluster_Moose_Exporter {
	label="Moose::Exporter";
	"Moose::Exporter::build_import_methods";
}
subgraph cluster_Class_MOP_Mixin_HasMethods {
	label="Class::MOP::Mixin::HasMethods";
	"Class::MOP::Mixin::HasMethods::_code_is_mine";
	"Class::MOP::Mixin::HasMethods::add_method";
	"Class::MOP::Mixin::HasMethods::get_method_list";
	"Class::MOP::Mixin::HasMethods::wrap_method_body";
	"Class::MOP::Mixin::HasMethods::get_method";
}
subgraph cluster_Moose_Meta_Role {
	label="Moose::Meta::Role";
	"Moose::Meta::Role::_new";
	"Moose::Meta::Role::initialize";
}
subgraph cluster_Class_MOP_Method_Inlined {
	label="Class::MOP::Method::Inlined";
	"Class::MOP::Method::Inlined::can_be_inlined";
}
subgraph cluster_MooseX_ClassAttribute_Meta_Method_Accessor {
	label="MooseX::ClassAttribute::Meta::Method::Accessor";
	"MooseX::ClassAttribute::Meta::Method::Accessor::_inline_check_lazy";
}
subgraph cluster_Moose_Util_MetaRole {
	label="Moose::Util::MetaRole";
	"Moose::Util::MetaRole::_make_new_class";
}
subgraph cluster_Moose_Meta_Method_Constructor {
	label="Moose::Meta::Method::Constructor";
	"Moose::Meta::Method::Constructor::_initialize_body";
}
subgraph cluster_Scalar_Util {
	label="Scalar::Util";
	"Scalar::Util::reftype";
	"Scalar::Util::blessed";
}
subgraph cluster_UNIVERSAL {
	label="UNIVERSAL";
	"UNIVERSAL::isa";
}
subgraph cluster_Moose_Meta_Class {
	label="Moose::Meta::Class";
	"Moose::Meta::Class::_reinitialize_with";
	"Moose::Meta::Class::reinitialize";
	"Moose::Meta::Class::initialize";
}
subgraph cluster_base {
	label="base";
	"base::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
	"strict::unimport";
}
subgraph cluster_Class_MOP_Instance {
	label="Class::MOP::Instance";
	"Class::MOP::Instance::_class_name";
}
subgraph cluster_Class_MOP_Class {
	label="Class::MOP::Class";
	"Class::MOP::Class::linearized_isa";
	"Class::MOP::Class::class_precedence_list";
	"Class::MOP::Class::is_anon_class";
	"Class::MOP::Class::clone_object";
	"Class::MOP::Class::_inline_constructor";
	"Class::MOP::Class::__ANON__[Class/MOP/Class.pm:678]";
	"Class::MOP::Class::superclasses";
	"Class::MOP::Class::_inline_destructor";
	"Class::MOP::Class::DESTROY";
	"Class::MOP::Class::new_object";
}
subgraph cluster_Class_MOP {
	label="Class::MOP";
	"Class::MOP::store_metaclass_by_name";
	"Class::MOP::get_metaclass_by_name";
	"Class::MOP::remove_metaclass_by_name";
}
subgraph cluster_Class_MOP_Method_Constructor {
	label="Class::MOP::Method::Constructor";
	"Class::MOP::Method::Constructor::_generate_constructor_method_inline";
}
subgraph cluster_Exporter {
	label="Exporter";
	"Exporter::import";
}
subgraph cluster_Class_MOP_Class_Immutable_Class_MOP_Class {
	label="Class::MOP::Class::Immutable::Class::MOP::Class";
	"Class::MOP::Class::Immutable::Class::MOP::Class::add_package_symbol";
}
subgraph cluster_Class_MOP_Attribute {
	label="Class::MOP::Attribute";
	"Class::MOP::Attribute::_process_accessors";
	"Class::MOP::Attribute::get_write_method_ref";
	"Class::MOP::Attribute::__ANON__[Class/MOP/Attribute.pm:340]";
}
subgraph cluster_Class_MOP_Class_ {
	label="Class::MOP::Class:";
	"Class::MOP::Class:::after";
	"Class::MOP::Class:::around";
}
subgraph cluster_Class_MOP_Package {
	label="Class::MOP::Package";
	"Class::MOP::Package::namespace";
	"Class::MOP::Package::get_package_symbol";
	"Class::MOP::Package::BEGIN@207";
	"Class::MOP::Package::_deconstruct_variable_name";
	"Class::MOP::Package::initialize";
	"Class::MOP::Package::reinitialize";
	"Class::MOP::Package::BEGIN@8";
	"Class::MOP::Package::BEGIN@100";
	"Class::MOP::Package::has_package_symbol";
	"Class::MOP::Package::BEGIN@152";
	"Class::MOP::Package::BEGIN@145";
	"Class::MOP::Package::_new";
	"Class::MOP::Package::BEGIN@7";
	"Class::MOP::Package::BEGIN@5";
	"Class::MOP::Package::add_package_symbol";
	"Class::MOP::Package::name";
	"Class::MOP::Package::BEGIN@14";
	"Class::MOP::Package::BEGIN@146";
	"Class::MOP::Package::BEGIN@4";
}
subgraph cluster_Moose_Meta_Attribute {
	label="Moose::Meta::Attribute";
	"Moose::Meta::Attribute::interpolate_class";
}
subgraph cluster_Moose_Meta_Role_Application_ToClass {
	label="Moose::Meta::Role::Application::ToClass";
	"Moose::Meta::Role::Application::ToClass::check_role_exclusions";
}
"Class::MOP::Mixin::HasMethods::get_method_list" -> "Class::MOP::Package::namespace";
"Class::MOP::Package::get_package_symbol" -> "Class::MOP::Package::namespace";
"Class::MOP::Package::has_package_symbol" -> "Class::MOP::Package::namespace";
"base::import" -> "Class::MOP::Package::BEGIN@100";
"base::import" -> "Class::MOP::Package::BEGIN@145";
"base::import" -> "Class::MOP::Package::BEGIN@7";
"Class::MOP::Package::BEGIN@146" -> "warnings::unimport";
"Class::MOP::Package::BEGIN@7" -> "Exporter::import";
"Class::MOP::Package::BEGIN@8" -> "Exporter::import";
"base::import" -> "Class::MOP::Package::BEGIN@207";
"Moose::Meta::Class::reinitialize" -> "Class::MOP::Package::reinitialize";
"base::import" -> "Class::MOP::Package::BEGIN@8";
"Class::MOP::Package::reinitialize" -> "Scalar::Util::blessed";
"base::import" -> "Class::MOP::Package::BEGIN@152";
"Class::MOP::Package::initialize" -> "Class::MOP::store_metaclass_by_name";
"Class::MOP::Package::get_package_symbol" -> "Class::MOP::Class::Immutable::Class::MOP::Class::add_package_symbol";
"Class::MOP::Package::add_package_symbol" -> "Class::MOP::Package::_deconstruct_variable_name";
"Class::MOP::Package::has_package_symbol" -> "Class::MOP::Package::_deconstruct_variable_name";
"Moose::Exporter::build_import_methods" -> "Class::MOP::Package::initialize";
"Moose::Meta::Role::initialize" -> "Class::MOP::Package::initialize";
"base::import" -> "Class::MOP::Package::BEGIN@5";
"Class::MOP::Package::reinitialize" -> "Moose::Meta::Class::initialize";
"Moose::Exporter::build_import_methods" -> "Class::MOP::Package::has_package_symbol";
"Class::MOP::Package::reinitialize" -> "Class::MOP::remove_metaclass_by_name";
"Class::MOP::Mixin::HasMethods::add_method" -> "Class::MOP::Package::add_package_symbol";
"Class::MOP::Package::get_package_symbol" -> "Class::MOP::Package::add_package_symbol";
"Class::MOP::Class:::around" -> "Class::MOP::Package::add_package_symbol";
"Moose::Exporter::build_import_methods" -> "Class::MOP::Package::add_package_symbol";
"Class::MOP::Package::has_package_symbol" -> "Scalar::Util::reftype";
"base::import" -> "Class::MOP::Package::BEGIN@146";
"Class::MOP::Package::BEGIN@100" -> "strict::unimport";
"Class::MOP::Package::BEGIN@145" -> "strict::unimport";
"Class::MOP::Package::BEGIN@207" -> "strict::unimport";
"Class::MOP::Package::BEGIN@152" -> "strict::unimport";
"Class::MOP::Package::BEGIN@14" -> "base::import";
"Class::MOP::Package::reinitialize" -> "UNIVERSAL::isa";
"Class::MOP::Package::BEGIN@5" -> "warnings::import";
"Class::MOP::Class::superclasses" -> "Class::MOP::Package::get_package_symbol";
"Class::MOP::Mixin::HasMethods::get_method" -> "Class::MOP::Package::get_package_symbol";
"Class::MOP::Package::initialize" -> "Moose::Meta::Role::_new";
"Class::MOP::Package::initialize" -> "Class::MOP::get_metaclass_by_name";
"Class::MOP::Package::initialize" -> "Class::MOP::Package::_new";
"Class::MOP::Class::linearized_isa" -> "Class::MOP::Package::name";
"Moose::Meta::Method::Constructor::_initialize_body" -> "Class::MOP::Package::name";
"Class::MOP::Class:::after" -> "Class::MOP::Package::name";
"MooseX::ClassAttribute::Meta::Method::Accessor::_inline_check_lazy" -> "Class::MOP::Package::name";
"Class::MOP::Class::class_precedence_list" -> "Class::MOP::Package::name";
"Moose::Meta::Role::Application::ToClass::check_role_exclusions" -> "Class::MOP::Package::name";
"Class::MOP::Instance::_class_name" -> "Class::MOP::Package::name";
"Class::MOP::Class::clone_object" -> "Class::MOP::Package::name";
"Class::MOP::Class::is_anon_class" -> "Class::MOP::Package::name";
"Class::MOP::Class::_inline_constructor" -> "Class::MOP::Package::name";
"Class::MOP::Package::reinitialize" -> "Class::MOP::Package::name";
"Class::MOP::Module::_instantiate_module" -> "Class::MOP::Package::name";
"Class::MOP::Attribute::__ANON__[Class/MOP/Attribute.pm:340]" -> "Class::MOP::Package::name";
"Class::MOP::Class::_inline_destructor" -> "Class::MOP::Package::name";
"Class::MOP::Mixin::HasMethods::wrap_method_body" -> "Class::MOP::Package::name";
"Moose::Meta::Attribute::interpolate_class" -> "Class::MOP::Package::name";
"Moose::Meta::Role::Application::ToRole::check_role_exclusions" -> "Class::MOP::Package::name";
"Moose::Meta::Role::Application::ToRole::apply_methods" -> "Class::MOP::Package::name";
"MooseX::ClassAttribute::Role::Meta::Class::_class_attribute_var_name" -> "Class::MOP::Package::name";
"Moose::Meta::Class::_reinitialize_with" -> "Class::MOP::Package::name";
"Class::MOP::Method::Constructor::_generate_constructor_method_inline" -> "Class::MOP::Package::name";
"Class::MOP::Mixin::HasMethods::_code_is_mine" -> "Class::MOP::Package::name";
"Class::MOP::Attribute::_process_accessors" -> "Class::MOP::Package::name";
"Class::MOP::Class::__ANON__[Class/MOP/Class.pm:678]" -> "Class::MOP::Package::name";
"Moose::Util::MetaRole::_make_new_class" -> "Class::MOP::Package::name";
"Class::MOP::Mixin::HasMethods::add_method" -> "Class::MOP::Package::name";
"Class::MOP::Attribute::get_write_method_ref" -> "Class::MOP::Package::name";
"Class::MOP::Class::superclasses" -> "Class::MOP::Package::name";
"Class::MOP::Method::Inlined::can_be_inlined" -> "Class::MOP::Package::name";
"Class::MOP::Class::new_object" -> "Class::MOP::Package::name";
"Class::MOP::Class::DESTROY" -> "Class::MOP::Package::name";
"base::import" -> "Class::MOP::Package::BEGIN@14";
"Class::MOP::Package::BEGIN@4" -> "strict::import";
"base::import" -> "Class::MOP::Package::BEGIN@4";
}
